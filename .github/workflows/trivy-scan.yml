name: Trivy Docker Image Scan

on:
  workflow_call:
    inputs:
      image-name:
        description: "Nombre de la imagen Docker"
        required: true
        type: string
      image-tag:
        description: "Tag de la imagen Docker"
        required: true
        type: string
      severity:
        description: "Nivel de severidad a reportar"
        default: "CRITICAL,HIGH"
        required: false
        type: string
      output-format:
        description: "Formato de salida de Trivy (sarif, json, table)"
        default: "sarif"
        required: false
        type: string
    secrets:
      DOCKER_HUB_USERNAME:
        required: true
      DOCKER_HUB_TOKEN:
        required: true

permissions:
  contents: read
  security-events: write

jobs:
  trivy-scan:
    name: Scan Docker Image with Trivy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Pull Docker image
        run: docker pull ${{ inputs.image-name }}:${{ inputs.image-tag }}

      - name: Install Trivy CLI
        run: |
          curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b /usr/local/bin

      - name: Run Trivy vulnerability scanner (SARIF)
        if: ${{ inputs.output-format == 'sarif' }}
        uses: aquasecurity/trivy-action@0.17.0
        with:
          image-ref: '${{ inputs.image-name }}:${{ inputs.image-tag }}'
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: ${{ inputs.severity }}
          exit-code: 0

      - name: Run Trivy vulnerability scanner (JSON or TABLE)
        if: ${{ inputs.output-format != 'sarif' }}
        run: |
          trivy image ${{ inputs.image-name }}:${{ inputs.image-tag }} \
            --format ${{ inputs.output-format }} \
            --output trivy-results.${{ inputs.output-format }} \
            --severity ${{ inputs.severity }} \
            --dependency-tree

      - name: Upload Trivy SARIF results to GitHub Security tab
        if: ${{ inputs.output-format == 'sarif' }}
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'

      - name: Upload Trivy JSON/TABLE artifact
        if: ${{ inputs.output-format != 'sarif' }}
        uses: actions/upload-artifact@v4
        with:
          name: trivy-report-${{ inputs.output-format }}
          path: trivy-results.${{ inputs.output-format }}

      - name: Generate SBOM (CycloneDX)
        run: |
          trivy image ${{ inputs.image-name }}:${{ inputs.image-tag }} \
            --format cyclonedx \
            --output sbom.cyclonedx.json

      - name: Upload SBOM artifact
        uses: actions/upload-artifact@v4
        with:
          name: sbom-cyclonedx
          path: sbom.cyclonedx.json
